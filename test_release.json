{
  "release": {
    "name": "Test Release",
    "tag": "v1.0.0",
    "type": "dev",
    "date": "2025-01-20",
    "project_url": "https://github.com/test/test",
    "software_name": "Test App",
    "software_version": "1.0.0"
  },
  "tasks": [
    {
      "title": "Pre-Release Code Quality",
      "description": [
        "Ensure code quality standards are met before release",
        "Run comprehensive checks on codebase"
      ],
      "project": "Test App",
      "tags": [
        "quality",
        "pre-release"
      ],
      "category": "Infrastructure",
      "priority": 1,
      "children": [
        {
          "title": "Run Linting",
          "description": [
            "Execute ruff linting checks",
            "Ensure code follows style guidelines"
          ],
          "project": "Test App",
          "tags": [
            "linting",
            "ruff"
          ],
          "category": "Code Quality",
          "priority": 1
        },
        {
          "title": "Type Checking",
          "description": [
            "Run mypy static type checking",
            "Verify type annotations are correct"
          ],
          "project": "Test App",
          "tags": [
            "typing",
            "mypy"
          ],
          "category": "Code Quality",
          "priority": 2
        }
      ]
    },
    {
      "title": "Testing Phase",
      "description": [
        "Execute comprehensive test suite",
        "Verify functionality across supported platforms"
      ],
      "project": "Test App",
      "tags": [
        "testing",
        "validation"
      ],
      "category": "Quality Assurance",
      "priority": 2,
      "children": [
        {
          "title": "Unit Tests",
          "description": [
            "Run pytest test suite",
            "Generate coverage reports"
          ],
          "project": "Test App",
          "tags": [
            "pytest",
            "unit-tests"
          ],
          "category": "Testing",
          "priority": 1
        },
        {
          "title": "Cross-Platform Testing",
          "description": [
            "Test on Ubuntu and Windows platforms",
            "Verify Python 3.12 compatibility"
          ],
          "project": "Test App",
          "tags": [
            "cross-platform",
            "compatibility"
          ],
          "category": "Testing",
          "priority": 2
        }
      ]
    },
    {
      "title": "Package Building",
      "description": [
        "Build distribution packages",
        "Validate package metadata"
      ],
      "project": "Test App",
      "tags": [
        "packaging",
        "distribution"
      ],
      "category": "Build",
      "priority": 3,
      "children": [
        {
          "title": "Create Source Distribution",
          "description": [
            "Build source distribution with python -m build",
            "Verify sdist contents"
          ],
          "project": "Test App",
          "tags": [
            "sdist",
            "build"
          ],
          "category": "Packaging",
          "priority": 1
        },
        {
          "title": "Create Wheel Distribution",
          "description": [
            "Build wheel distribution",
            "Validate wheel metadata"
          ],
          "project": "Test App",
          "tags": [
            "wheel",
            "build"
          ],
          "category": "Packaging",
          "priority": 2
        },
        {
          "title": "Validate with Twine",
          "description": [
            "Run twine check on built packages",
            "Ensure PyPI compatibility"
          ],
          "project": "Test App",
          "tags": [
            "twine",
            "validation"
          ],
          "category": "Packaging",
          "priority": 3
        }
      ]
    },
    {
      "title": "Documentation Updates",
      "description": [
        "Update documentation for release",
        "Ensure changelog and version info are current"
      ],
      "project": "Test App",
      "tags": [
        "documentation",
        "changelog"
      ],
      "category": "Documentation",
      "priority": 4,
      "children": [
        {
          "title": "Update Version Information",
          "description": [
            "Update version in pyproject.toml",
            "Verify version consistency across files"
          ],
          "project": "Test App",
          "tags": [
            "versioning"
          ],
          "category": "Documentation",
          "priority": 1
        },
        {
          "title": "Update README",
          "description": [
            "Review and update README.md",
            "Ensure installation and usage instructions are current"
          ],
          "project": "Test App",
          "tags": [
            "readme"
          ],
          "category": "Documentation",
          "priority": 2
        }
      ]
    },
    {
      "title": "Release Preparation",
      "description": [
        "Prepare for release deployment",
        "Create release artifacts"
      ],
      "project": "Test App",
      "tags": [
        "release",
        "preparation"
      ],
      "category": "Release Management",
      "priority": 5,
      "children": [
        {
          "title": "Git Tag Creation",
          "description": [
            "Create and push git tag v1.0.0",
            "Ensure tag follows semantic versioning"
          ],
          "project": "Test App",
          "tags": [
            "git",
            "tagging"
          ],
          "category": "Version Control",
          "priority": 1
        },
        {
          "title": "Release Notes",
          "description": [
            "Prepare release notes for Test Release",
            "Document new features, fixes, and breaking changes"
          ],
          "project": "Test App",
          "tags": [
            "release-notes",
            "documentation"
          ],
          "category": "Documentation",
          "priority": 2
        }
      ]
    }
  ]
}